#!/usr/bin/env ruby

# note this code logic is kept separate from our models because it would not be reused in a web version of this app.
# this file is for an exercise in creating a simple command-line script
# it is not meant to be catch all input errors and does not have functionality for a User to sign up - only Users already added in the DB will be able to input their emails at the beginning prompt
# also note CLI created before tag_topic and tagging models added
class CLI

  def run
    login_user!
    initialize_url_tracker
    initial_options
  end

  def initialize_url_tracker
    @urls = []
  end

  def initial_options
    puts "\n"
    puts 'What would you like to do? (enter the corresponding number):'
    puts '[0] Create shortened URL'
    puts '[1] Visit shortened URL'
    puts '[2] Quit'
    print '> '

    begin
      option = Integer(gets.chomp)
    rescue ArgumentError
      puts "Please enter a valid number"
      print "> "
      retry
    end

    case option
    when 0
      create_url
    when 1
      visit_url
    when 2
      abort("The following shortened url(s) were created in this session: #{@urls}")
    end

  end

  def login_user!
    puts 'Input your email:'
    @current_user = User.find_by_email(gets.chomp)
    if @current_user.nil?
      puts "\n"
      puts 'Sorry, that email does not match our records'
      puts "Please rerun the program to try again"
      abort("     ")
    end

    nil
  end

  def create_url
    puts "   "
    puts 'Please enter the long url:'
    print "> "
    long_url = gets.chomp
    shortened_url = ShortenedUrl.create_for_user_and_long_url!(
      @current_user,
      long_url
    )
    @urls << shortened_url.short_url
    puts "    "
    puts "Your shortened url is: #{shortened_url.short_url}"
    initial_options
  end

  def visit_url
    puts 'Please enter the shortened url:'
    print "> "
    short_url = gets.chomp

    shortened_url = ShortenedUrl.find_by_short_url(short_url)

    raise 'no such url found!' if shortened_url.nil?

    Visit.record_visit!(@current_user, shortened_url)
    Launchy.open(shortened_url.long_url)
  end

end

CLI.new.run
